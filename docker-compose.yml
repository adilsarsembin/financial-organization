version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
    environment:
      - DB_NAME=financial_organization
      - DB_USER=financial_organization
      - DB_PASSWORD=financial_organization
      - DB_HOST=postgres-fo
      - RABBIT_HOST=rabbitmq
      - REDIS_HOST=redis

  redis:
    image: redis:6-alpine

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A financial_organization.celery worker -l info
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - db

  db:
    image: postgres:15-alpine
    hostname: postgres-fo
    environment:
      - POSTGRES_DB=financial_organization
      - POSTGRES_USER=financial_organization
      - POSTGRES_PASSWORD=financial_organization
    volumes:
      - pgdata:/var/lib/postgresql/data

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: npm run serve
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend

volumes:
  pgdata:
